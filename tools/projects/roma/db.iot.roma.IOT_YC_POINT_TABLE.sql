--	环境烟雾传感器	mqtt	1	tk_yc_smokesensor	网关子设备	详情  设备列表  删除
--	用户电表	mqtt	287	tk_yc_consumer_meter	网关子设备	详情  设备列表  删除
--	充电桩	mqtt	2	tk_yc_charging_pile	网关子设备	详情  设备列表  删除
--	分支监测箱	mqtt	3	tk_yc_branch_monitor	网关子设备	详情  设备列表  删除
--	智能开关	mqtt	3	tk_yc_smart_switch	网关子设备	详情  设备列表  删除
--	环境温湿度传感器	mqtt	2	tk_yc_temperature_humidity_sensor	网关子设备	详情  设备列表  删除
--	公用台变总表	mqtt	1	tk_yc_public_changer	网关子设备	详情  设备列表  删除

INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'A相电压',	'voltage_a',	'Ua',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_A_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'B相电压',	'voltage_b',	'Ub',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_B_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'C相电压',	'voltage_c',	'Uc',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_C_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'A相电流',	'current_a',	'Ia',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_A_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'B相电流',	'current_b',	'Ib',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_B_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'C相电流',	'current_c',	'Ic',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_C_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'A相有功功率',	'active_power_a',	'a_Pa',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_A_FORTH_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'B相有功功率',	'active_power_b',	'a_Pb',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_B_FORTH_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'C相有功功率',	'active_power_c',	'a_Pc',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_C_FORTH_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'总有功功率',	'active_power_t',	'a_Pt',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_FORTH_HAVE_POWER_TOTAL');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'A相无功功率',	'wattless_power_a',	'w_Pa',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_A_BACK_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'B相无功功率',	'wattless_power_b',	'w_Pb',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_B_BACK_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'C相无功功率',	'wattless_power_c',	'w_Pc',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_C_BACK_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'总无功功率',	'wattless_power_t',	'w_Pt',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_BACK_HAVE_POWER_TOTAL');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'A相功率因数',	'power_factor_a',	'PFa',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_POWER_FATOR_A');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'B相功率因数',	'power_factor_b',	'PFb',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_POWER_FATOR_B');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'C相功率因数',	'power_factor_c',	'PFc',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_POWER_FATOR_C');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'总功率因数',	'power_factor_t',	'PFt',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_POWER_FATOR');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'A相电量',	'electric_energy_a',	'Ea',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_A_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'B相电量',	'electric_energy_b',	'Eb',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_B_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'C相电量',	'electric_energy_c',	'Ec',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_PHASE_C_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'总电量',	'electric_energy_t',	'Et',	'double',	'app645Meter',	'METER_TABLE',	'POWER_METER_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'日三相电流不平衡度',	'current_imbalance_rate_d',	'imblc_rt_Id',	'double',	'gw_sys',	'AREA_DAILY_TABLE',	'THREE_PHASE_UNBALANCE_OF_DAILY_CURRENT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'月三相电流不平衡度',	'current_imbalance_rate_m',	'imblc_rt_Im',	'double',	'gw_sys',	'AREA_MONTHLY_TABLE',	'THREE_PHASE_UNBALANCE_OF_MONTHLY_CURRENT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'年三相电流不平衡度',	'current_imbalance_rate_y',	'imblc_rt_Iy',	'double',	'gw_sys',	'AREA_ANNUAL_TABLE',	'THREE_PHASE_UNBALANCE_OF_ANNUAL_CURRENT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'日电压越上限率',	'voltage_upper_limit_rate_d',	'up_rt_Ud',	'double',	'gw_sys',	'AREA_DAILY_TABLE',	'OVER_LIMIT_RATE_OF_DAILY_VOLTAGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'月电压越上限率',	'voltage_upper_limit_rate_m',	'up_rt_Um',	'double',	'gw_sys',	'AREA_MONTHLY_TABLE',	'OVER_LIMIT_RATE_OF_MONTHLY_VOLTAGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'年电压越上限率',	'voltage_upper_limit_rate_y',	'up_rt_Uy',	'double',	'gw_sys',	'AREA_ANNUAL_TABLE',	'ANNUAL_VOLTAGE_OVER_LIMIT_RATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'日电压越下限率',	'voltage_lower_limit_rate_d',	'low_rt_Ud',	'double',	'gw_sys',	'AREA_DAILY_TABLE',	'LOWER_LIMIT_RATE_OF_DAILY_VOLTAGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'月电压越下限率',	'voltage_lower_limit_rate_m',	'low_rt_Um',	'double',	'gw_sys',	'AREA_MONTHLY_TABLE',	'LOWER_LIMIT_RATE_OF_MONTHLY_VOLTAGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'年电压越下限率',	'voltage_lower_limit_rate_y',	'low_rt_Uy',	'double',	'gw_sys',	'AREA_ANNUAL_TABLE',	'ANNUAL_VOLTAGE_LOWER_LIMIT_RATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'日电压合格率',	'voltage_pass_rate_d',	'pass_rt_Ud',	'double',	'gw_sys',	'AREA_DAILY_TABLE',	'QUALIFIED_RATE_OF_DAILY_VOLTAGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'月电压合格率',	'voltage_pass_rate_m',	'pass_rt_Um',	'double',	'gw_sys',	'AREA_MONTHLY_TABLE',	'MONTHLY_VOLTAGE_QUALIFICATION_RATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'年电压合格率',	'voltage_pass_rate_y',	'pass_rt_Uy',	'double',	'gw_sys',	'AREA_ANNUAL_TABLE',	'ANNUAL_VOLTAGE_QUALIFICATION_RATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'日负载率',	'load_rate_d',	'load_rt_d',	'double',	'gw_sys',	'AREA_DAILY_TABLE',	'DAILY_LOAD_RATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'月负载率',	'load_rate_m',	'load_rt_m',	'double',	'gw_sys',	'AREA_MONTHLY_TABLE',	'MONTHLY_LOAD_RATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'年负载率',	'load_rate_y',	'load_rt_y',	'double',	'gw_sys',	'AREA_ANNUAL_TABLE',	'ANNUAL_LOAD_RATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'日线损',	'line_loss_d',	'lineloss_d',	'double',	'gw_sys',	'AREA_DAILY_TABLE',	'DAILY_LINE_LOSS_IN_AREA');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_public_changer',	'月线损',	'line_loss_m',	'lineloss_m',	'double',	'gw_sys',	'AREA_MONTHLY_TABLE',	'MONTHLY_LINE_LOSS');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_temperature_humidity_sensor',	'温度',	'temperature',	'TT',	'double',	'appMBMid',	'TH_TABLE',	'TEMPERATURE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_temperature_humidity_sensor',	'湿度',	'humidity',	'HH',	'double',	'appMBMid',	'TH_TABLE',	'HUMIDITY');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'A相电压',	'voltage_a',	'Ua',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_PHASE_A_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'B相电压',	'voltage_b',	'Ub',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_PHASE_B_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'C相电压',	'voltage_c',	'Uc',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_PHASE_C_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'A相电流',	'current_a',	'Ia',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_PHASE_A_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'B相电流',	'current_b',	'Ib',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_PHASE_B_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'C相电流',	'current_c',	'Ic',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_PHASE_C_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'零序电流',	'current_n',	'In',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_ZERO_SEQUENCE_CURRENT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'总有功功率',	'active_power_t',	'a_Pt',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_FORTH_HAVE_POWER_TOTAL');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'总无功功率',	'wattless_power_t',	'w_Pt',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_BACK_HAVE_POWER_TOTAL');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'总功率因数',	'power_factor_t',	'PFt',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_POWER_FATOR');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'总电量',	'Et',	'Et',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smart_switch',	'开关位置',	'gear',	'gear',	'double',	'appMBMid',	'SWITCH_TABLE',	'SWITCH_ON_OFF');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'A相电压',	'voltage_a',	'Ua',	'double',	'gw_sys',	'GUZHI_TABLE',	'GUZHI_PHASE_A_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'B相电压',	'voltage_b',	'Ub',	'double',	'gw_sys',	'GUZHI_TABLE',	'GUZHI_PHASE_B_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'C相电压',	'voltage_c',	'Uc',	'double',	'gw_sys',	'GUZHI_TABLE',	'GUZHI_PHASE_C_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'A相电流',	'current_a',	'Ia',	'double',	'gw_sys',	'GUZHI_TABLE',	'GUZHI_PHASE_A_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'B相电流',	'current_b',	'Ib',	'double',	'gw_sys',	'GUZHI_TABLE',	'GUZHI_PHASE_B_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'C相电流',	'current_c',	'Ic',	'double',	'gw_sys',	'GUZHI_TABLE',	'GUZHI_PHASE_C_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'总电量',	'electric_energy_t',	'Et',	'double',	'gw_sys',	'GUZHI_TABLE',	'GUZHI_POSTIVE_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'日线损',	'line_loss_d',	'lineloss_d',	'double',	'gw_sys',	'BRANCH_TABLE',		'LINELOSS');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'月线损',	'line_loss_m',	'lineloss_m',	'double',	'gw_sys',	'BRANCH_TABLE',		'LINELOSS_MONTH');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_branch_monitor',	'日电流三相不平衡',	'current_imbalance_rate_d',	'I_imblc_rt_d',	'double',	'gw_sys',	'PHASE_BLANCE_TABLE',		'CURBALANCERATE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'电压',	'voltage',	'UU',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGEVOLTAGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'电流',	'current',	'II',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGECURRENT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'总电能',	'electric_energy',	'EE',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGEENERGETOTAL');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'电能尖峰值',	'electric_energy_crest',	'E_crest',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGEENERGEPEAK');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'电能平值',	'electric_energy_usual',	'E_usual',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGEENERGEFLAT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'电能低谷值',	'electric_energy_trough',	'E_trough',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGEENERGEBOTTOM');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'充电头温度',	'charging_plug_temperature',	'TT',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGETEMPTURE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'充电功率',	'charge_power',	'PP',	'double',	'appCharge',	'CHARGE_KELU_TABLE',	'CHARGEPOWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'充电头连接状态',	'connection_status',	'plug_state',	'enum',	'gw_sys',	'YX_TABLE',	'CHARGEHOOKSTATUS');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_charging_pile',	'充电头充电状态',	'charging_status',	'charge_state',	'enum',	'gw_sys',	'YX_TABLE',	'CHARGESTATUS');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'A相电压',	'voltage_a',	'Ua',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_A_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'B相电压',	'voltage_b',	'Ub',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_B_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'C相电压',	'voltage_c',	'Uc',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_C_VOLT');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'A相电流',	'current_a',	'Ia',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_A_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'B相电流',	'current_b',	'Ib',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_B_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'C相电流',	'current_c',	'Ic',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_C_ELEC');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'A相有功功率',	'active_power_a',	'a_Pa',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_A_FORTH_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'B相有功功率',	'active_power_b',	'a_Pb',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_B_FORTH_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'C相有功功率',	'active_power_c',	'a_Pc',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_C_FORTH_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'总有功功率',	'active_power_t',	'a_Pt',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_FORTH_HAVE_POWER_TOTAL');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'A相无功功率',	'wattless_power_a',	'w_Pa',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_A_BACK_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'B相无功功率',	'wattless_power_b',	'w_Pb',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_B_BACK_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'C相无功功率',	'wattless_power_c',	'w_Pc',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_C_BACK_HAVE_POWER');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'总无功功率',	'wattless_power_t',	'w_Pt',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_BACK_HAVE_POWER_TOTAL');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'A相功率因数',	'power_factor_a',	'PFa',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_POWER_FATOR_A');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'B相功率因数',	'power_factor_b',	'PFb',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_POWER_FATOR_B');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'C相功率因数',	'power_factor_c',	'PFc',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_POWER_FATOR_C');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'总功率因数',	'power_factor_t',	'PFt',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_POWER_FATOR');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'A相电量',	'electric_energy_a',	'Ea',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_A_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'B相电量',	'electric_energy_b',	'Eb',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_B_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'C相电量',	'electric_energy_c',	'Ec',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_PHASE_C_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_consumer_meter',	'总电量',	'electric_energy_t',	'Et',	'double',	'appMeterPlcMail',	'METER_TABLE',	'POWER_METER_ENERGE');
INSERT INTO `IOT_YC_POINT_TABLE`(`MODEL`, `RES1`, `RES2`, `MODEL_ATTR`, `MODEL_ATTR_TYPE`, `DATABASE_NAME`, `TABLE_NAME`, `DEVICE_ATTR`) VALUES ('tk_yc_smokesensor',	'告警状态',	'smoke',	'smoke',	'enum',	'appMBMid',	'SENSORSMOKE_TABLE',	'SMOKE_STATE');
